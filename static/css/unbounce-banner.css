/* 
  Change styling when Unbounce banner is going to be placed on the page
  Unbounce adds a top margin to the body of the main DOM based on the height of the banner
  The default top of 0 needs to be removed
  ub-emb-container is the class of the node that Unbounce inserts into the main body at the end
  The node is at the same level of the tree as the s2 node used for React
*/
div#s2:has(~ div.ub-emb-container) {
  top: unset;
}

/* 
  Adjust margin on footer when banner is shown
  The introduction of the banner into the DOM by Unbounce with the top margin causes the footer to be cutoff
*/
div#s2:has(~ div.ub-emb-container):not(:has(~ div#staticContentWrapper)) #footer {
  margin-bottom: 120px;
}

/* 
  Remove adjustment margin when banner is removed
  This sets the footer back to its default when the banner is removed
  When the Unbounce banner is closed out by its button, the nodes from the div node with the ub-emb-container class are removed
  A single blank div remains
*/
div#s2:has(~ div.ub-emb-container div:only-child:empty):not(:has(~ div#staticContentWrapper)) #footer {
  margin-bottom: 0;
}

/* Make some style changes on the static pages where the React node is in header only mode */
div#staticContentWrapper:has(~ .ub-emb-container):has(.staticPage) {
  padding-top: 60px;
}

div#staticContentWrapper:has(~ .ub-emb-container) .staticPage .staticPageHeader {
  margin-top: unset;
}

/*
  The mobile navigation menu needs to be shifted when displayed and the banner is displaying on mobile
*/
div#s2:has(~ div.ub-emb-container) .singlePanel div.mobileNavMenu {
  height: calc(100vh - 180px);
  top: 180px;
}

div#s2:has(~ div.ub-emb-container div:only-child:empty) .singlePanel div.mobileNavMenu {
  height: calc(100vh - 60px);
  top: 60px;
}

div#s2:has(~ div.ub-emb-container) .singlePanel .autocomplete-dropdown {
  top: 240px
}

div#s2:has(~ div.ub-emb-container div:only-child:empty) .singlePanel .autocomplete-dropdown {
  top: 120px;
}