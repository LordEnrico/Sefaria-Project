name: Setup Integration Environment
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 4 * * *'

concurrency: integration_environment

jobs:
  environment-cleanup:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: sefaria-integrations
    container: us-east1-docker.pkg.dev/development-205018/containers/hosted-runner:latest
    steps:
    - name: cleanup
      run: |
        helm list release -n ${{ secrets.DEV_SANDBOX_NAMESPACE }} | grep integration | xargs -I env -n 1 helm delete env -n ${{ secrets.DEV_SANDBOX_NAMESPACE }} --debug --timeout 10m0s  
  database-setup:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: sefaria-integrations
    container: us-east1-docker.pkg.dev/development-205018/containers/hosted-runner:latest
    steps:
    - name: Get latest Backup
      run: gsutil -q cp gs://sefaria-mongo-backup/dump.tar.gz dump.tar.gz
    - name: Extract Backup
      run: tar xzvf dump.tar.gz -C .
    - name: Restore Backup
      run: |
        . <( kubectl get secret local-settings-secrets -n default -o yaml | yq -o=shell '.data | map_values(@base64d)')
        echo "::add-mask::$MONGO_HOST"
        echo "::add-mask::$MONGO_REPLICASET_NAME"
        echo "::add-mask::$SEFARIA_DB_USER"
        echo "::add-mask::$SEFARIA_DB_PASSWORD"

        if [[ -z "$MONGO_HOST" ]]; then
          echo "Mongo Host not specified"
          exit 1
        fi
        URI="mongodb://"
        if [[ ! -z "$SEFARIA_DB_USER" ]]; then
          URI="${URI}${SEFARIA_DB_USER}"
          if [[ ! -z "$SEFARIA_DB_PASSWORD" ]]; then
              URI="${URI}:${SEFARIA_DB_PASSWORD}"
          fi
          URI="${URI}@"
        fi
        URI="${URI}${MONGO_HOST}/?ssl=false"
        if [[ ! -z "$SEFARIA_DB_USER" ]]; then
          URI="${URI}&authSource=admin"
        fi
        if [[ ! -z "MONGO_REPLICASET_NAME" ]]; then
        URI="${URI}&replicaSet=${MONGO_REPLICASET_NAME}"
        fi
        mongorestore --drop --uri="$URI" -v -d sefaria-integration --dir=dump/sefaria 
